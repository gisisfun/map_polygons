

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "mb16tosa211";

CREATE TABLE mb16tosa211 AS
SELECT 
MB.MB_CODE16,
sa211.SA2_MAIN11,
sa211.SA2_NAME11,
((ST_Area(ST_Intersection(MB.geometry,sa211.geometry))*12391.3)/MB.MB_Area)*MB.Persons as Area_Count
FROM [mb_2016_aust_pop] as MB 
INNER JOIN [SA2_2011_AUST] as sa211 
ON ST_Intersects(MB.geometry,sa211.geometry);

.output ../csv/mb16tosa211.csv

select * from "mb16tosa211";


.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "mb16toced18";

CREATE TABLE mb16toced18 AS
SELECT 
MB.MB_CODE16,
ced18.CED_CODE18,
ced18.CED_NAME18,
((ST_Area(ST_Intersection(MB.geometry,ced18.geometry))*12391.3)/MB.MB_Area)*MB.Persons as Area_Count
FROM [mb_2016_aust_pop] as MB 
INNER JOIN [CED_2018_AUST] as ced18 
ON ST_Intersects(MB.geometry,ced18.geometry);

.output ../csv/mb16toced18.csv

select * from "mb16toced18";

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "mbpop16_sa211";

CREATE TABLE mbpop16_sa211 AS
SELECT 
MB_sa211.SA2_MAIN11 AS SA2_MAIN11,
MB_sa211.SA2_NAME11 as SA2_NAME11,
CAST(SUM(Area_Count) AS FLOAT) as Area_Total
FROM [mb16tosa211] as MB_sa211 
GROUP BY SA2_MAIN11,SA2_NAME11;

.output ../csv/mbpop16_sa211.csv

select * from "mbpop16_sa211";

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';


.mode csv
.headers on
pragma temp_store=0;
DROP TABLE IF EXISTS "sa211_ced18_mbpop16";

CREATE TABLE sa211_ced18_mbpop16 AS
SELECT
mb16tosa211.SA2_MAIN11 as SA2_MAIN11,
mb16tosa211.SA2_NAME11 as SA2_NAME11,
mb16toced18.CED_CODE18 AS CED_CODE18,
mb16toced18.CED_NAME18 AS CED_NAME18,
CAST(SUM(mb16tosa211.Area_Count) AS FLOAT) as Olap_Count
FROM mb16tosa211
INNER JOIN mb16toced18
ON mb16tosa211.MB_CODE16=mb16toced18.MB_CODE16
GROUP BY SA2_MAIN11,SA2_NAME11,CED_CODE18,CED_NAME18;

.output ../csv/sa211_ced18_mbpop16.csv

select * from "sa211_ced18_mbpop16";

.mode csv
.headers on
pragma temp_store=1;
DROP TABLE IF EXISTS "sa211_ced18_mbpop16_clean";

CREATE TABLE sa211_ced18_mbpop16_clean AS
SELECT
sa211_ced18_mbpop16.SA2_MAIN11 as SA2_MAIN11,
sa211_ced18_mbpop16.SA2_NAME11 as SA2_NAME11,
sa211_ced18_mbpop16.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop16.CED_NAME18 AS CED_NAME18,
sa211_ced18_mbpop16.Olap_Count
FROM sa211_ced18_mbpop16
WHERE CED_NAME18 NOT LIKE '%address%'
 AND 
CED_NAME18 NOT LIKE '%Migratory%' AND
SA2_NAME11 NOT LIKE '%address%' AND
SA2_NAME11 NOT LIKE '%Migratory%';

.output ../csv/sa211_ced18_mbpop16_clean.csv

select * from "sa211_ced18_mbpop16_clean";




.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "prop_sa211_ced18_mbpop16";

CREATE TABLE prop_sa211_ced18_mbpop16 AS
SELECT
sa211_ced18_mbpop16_clean.SA2_MAIN11 AS SA2_MAIN11,
sa211_ced18_mbpop16_clean.SA2_NAME11 AS SA2_NAME11,
sa211_ced18_mbpop16_clean.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop16_clean.CED_NAME18 AS CED_NAME18,
CAST((sa211_ced18_mbpop16_clean.Olap_Count/mbpop16_sa211.Area_Total) AS FLOAT) as Prop
FROM sa211_ced18_mbpop16_clean
INNER JOIN mbpop16_sa211
ON sa211_ced18_mbpop16_clean.SA2_MAIN11=mbpop16_sa211.SA2_MAIN11 ;

.output ../csv/prop_sa211_ced18_mbpop16.csv

select * from "prop_sa211_ced18_mbpop16";

###############################################################################################
# Total all proportions                                                                       #
# New Proportion is first proportion divided the first proportion total                       #
###############################################################################################

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "propt_sa211_ced18_mbpop16";

CREATE TABLE propt_sa211_ced18_mbpop16 AS
SELECT
prop_sa211_ced18_mbpop16.SA2_MAIN11 AS SA2_MAIN11,
prop_sa211_ced18_mbpop16.SA2_NAME11 AS SA2_NAME11,
SUM(prop_sa211_ced18_mbpop16.Prop) as Tot_Prop
FROM prop_sa211_ced18_mbpop16
where SA2_NAME11 NOT LIKE '%address%' AND
SA2_NAME11 NOT LIKE '%Migratory%'
GROUP BY SA2_MAIN11,SA2_NAME11;

.output ../csv/propt_sa211_ced18_mbpop16.csv

select * from "propt_sa211_ced18_mbpop16";

#############################
# Next Bit
##########################


.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "conc_sa211_ced18_mbpop16";

CREATE TABLE conc_sa211_ced18_mbpop16 AS
SELECT
sa211_ced18_mbpop16_clean.SA2_MAIN11 AS SA2_MAIN11,
sa211_ced18_mbpop16_clean.SA2_NAME11 AS SA2_NAME11,
sa211_ced18_mbpop16_clean.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop16_clean.CED_NAME18 AS CED_NAME18,
CAST((sa211_ced18_mbpop16_clean.Olap_Count/mbpop16_sa211.Area_Total)/propt_sa211_ced18_mbpop16.Tot_Prop as float) as Prop
FROM sa211_ced18_mbpop16_clean
INNER JOIN mbpop16_sa211
ON sa211_ced18_mbpop16_clean.SA2_MAIN11=mbpop16_sa211.SA2_MAIN11 and prop is not NULL
INNER JOIN propt_sa211_ced18_mbpop16
ON propt_sa211_ced18_mbpop16.SA2_MAIN11=mbpop16_sa211.SA2_MAIN11;


.output ../csv/conc_sa211_ced18_mbpop16.csv

select * from "conc_sa211_ced18_mbpop16";



.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';


.quit