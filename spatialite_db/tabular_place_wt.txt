

DROP TABLE if exists "feat_57km_11_placeN_count";

CREATE TABLE "feat_57km_11_placeN_count" AS
SELECT Feat_Aust.Poly as P,
Feat_Aust.Feat_Code as Feat_Code,
Count(*) as PlacesN
FROM [feat_aust_57km_sa1_11] as Feat_Aust 
LEFT JOIN [gis_osm_places_free_1] as Place
ON ST_Within(Place.geometry,Feat_Aust.geometry)
GROUP BY P,Feat_Code;

DROP TABLE if exists "feat_57km_11_placeD_count";

CREATE TABLE "feat_57km_11_placeD_count" AS
SELECT PlaceN.Feat_Code as Feat_Code,
Sum(PlaceN.PlacesN) as PlacesD
FROM [feat_57km_11_placeN_count] as PlaceN
GROUP BY Feat_Code;

DROP TABLE if exists "feat_57km_11_place_wt";

CREATE TABLE feat_57km_11_place_wt AS
SELECT PlaceN.P as Poly,
PlaceN.Feat_Code as Feat_Code,
(CAST(PlaceN.PlacesN as Float)/CAST(PlaceD.PlacesD as Float)) as Place_Wt 
FROM [feat_57km_11_placeN_count] as PlaceN
INNER JOIN [feat_57km_11_placeD_count] as PlaceD
ON PlaceN.Feat_Code=PlaceD.Feat_Code;

DROP TABLE if exists "donor_feat_place_57km_11_B18_B21_B22";

CREATE TABLE "donor_feat_place_57km_11_B18_B21_B22" AS
SELECT Place.Poly as Poly,
round(sum(Donor_B18.Persons_Total_Has_need_for_assistance*Place.Place_Wt),1) as NeedA11,
round(sum(Donor_B18.Persons_Total_Total*Place.Place_Wt),1) as NeedAT11,
round(sum(Donor_B21.Persons_Total_Provided_unpaid_assistance*Place.Place_Wt),1) as PUnPA11,
round(sum(Donor_B21.Persons_Total_Total*Place.Place_Wt),1) as PUnPAT11,
round(sum(Donor_B22.Persons_Total_Cared_for_Own_child_children_and_other_child_children*Place.Place_Wt),1) as PUnPCC11,
round(sum(Donor_B22.Persons_Total_Total*Place.Place_Wt),1) as PUnPCCT11
FROM [feat_57km_11_place_wt] as Place 
INNER JOIN [2011Census_B18_AUST_SA1_long] as Donor_B18 
ON Donor_B18.region_id=Place.Feat_Code  
INNER JOIN [2011Census_B21_AUST_SA1_long] as Donor_B21 
ON Donor_B21.region_id=Place.Feat_Code 
INNER JOIN [2011Census_B22B_AUST_SA1_long] as Donor_B22 
ON Donor_B22.region_id=Place.Feat_Code
GROUP BY Place.Poly
ORDER BY Poly;

DROP TABLE if exists "feat_57km_16_placeN_count";

CREATE TABLE "feat_57km_16_placeN_count" AS
SELECT Feat_Aust.Poly as P,
Feat_Aust.Feat_Code as Feat_Code,
Count(*) as PlacesN
FROM [feat_aust_57km_sa1_16] as Feat_Aust 
LEFT JOIN [gis_osm_places_free_1] as Place
ON ST_Within(Place.geometry,Feat_Aust.geometry)
GROUP BY P,Feat_Code;

DROP TABLE if exists "feat_57km_16_placeD_count";

CREATE TABLE "feat_57km_16_placeD_count" AS
SELECT PlaceN.Feat_Code as Feat_Code,
Sum(PlaceN.PlacesN) as PlacesD
FROM [feat_57km_16_placeN_count] as PlaceN
GROUP BY Feat_Code;

DROP TABLE if exists "feat_57km_16_place_wt";

CREATE TABLE feat_57km_16_place_wt AS
SELECT PlaceN.P as Poly,
PlaceN.Feat_Code as Feat_Code,
(CAST(PlaceN.PlacesN as Float)/CAST(PlaceD.PlacesD as Float)) as Place_Wt 
FROM [feat_57km_16_placeN_count] as PlaceN
INNER JOIN [feat_57km_16_placeD_count] as PlaceD
ON PlaceN.Feat_Code=PlaceD.Feat_Code;

DROP TABLE if exists "donor_feat_place_57km_16_G18_G21_G22";

CREATE TABLE "donor_feat_place_57km_16_G18_G21_G22" AS
SELECT Place.Poly as Poly,
round(sum(Donor_G18.P_Tot_Need_for_assistance*Place.Place_Wt),1) as NeedA16,
round(sum(Donor_G18.P_Tot_Tot*Place.Place_Wt),1) as NeedAT16,
round(sum(Donor_G21.P_Tot_prvided_unpaid_assist*Place.Place_Wt),1) as PUnPA16,
round(sum(Donor_G21.P_Tot_Tot*Place.Place_Wt),1) as PUnPAT16,
round(sum(Donor_G22.P_Tot_CF_Total*Place.Place_Wt),1) as PUnPCC16,
round(sum(Donor_G22.P_Tot_Total*Place.Place_Wt),1) as PUnPCCT16
FROM [feat_57km_16_place_wt] as Place 
INNER JOIN [2016Census_G18_AUS_SA1] as Donor_G18 
ON Donor_G18.SA1_7DIGITCODE_2016=Place.Feat_Code  
INNER JOIN [2016Census_G21_AUS_SA1] as Donor_G21 
ON Donor_G21.SA1_7DIGITCODE_2016=Place.Feat_Code 
INNER JOIN [2016Census_G22B_AUS_SA1] as Donor_G22 
ON Donor_G22.SA1_7DIGITCODE_2016=Place.Feat_Code
GROUP BY Place.Poly
ORDER BY Poly;

DROP TABLE if exists "shape_57km_place_count";

CREATE TABLE "shape_57km_place_count" AS
SELECT Shape.p as Poly,
Count(*) as places
FROM [aust_hex_shape_57km] as Shape, [gis_osm_places_free_1] as Place
WHERE ST_Within(Place.geometry,Shape.geometry) 
and (Place.fclass = 'city' 
OR Place.fclass= 'town')
GROUP BY Poly;

DROP TABLE if exists "shape_57km_road_count";

CREATE TABLE "shape_57km_road_count" AS
SELECT Shape.p as Poly,
Count(*) as roads
FROM [aust_hex_shape_57km] as Shape,[gis_osm_roads_free_1] as Road
WHERE ST_Within(Road.geometry,Shape.geometry) or ST_Intersects(Road.geometry,Shape.geometry)
GROUP BY Poly;

DROP TABLE if exists "shape_57km_service_count";

CREATE TABLE "shape_57km_service_count" AS
SELECT Shape_Aust.p as Poly,
Count(*) as services
FROM [aust_hex_shape_57km] as Shape_Aust, POI
WHERE ST_Within(POI.geometry,Shape_Aust.geometry)  
and  (POI.fclass = 'school' 
OR POI.fclass= 'police' 
OR POI.fclass= 'doctors' 
OR POI.fclass= 'hospital' 
OR POI.fclass= 'fire_station')
GROUP BY Poly;

DROP TABLE if exists "shape_57km_bstation_count";

CREATE TABLE "shape_57km_bstation_count" AS
SELECT Shape_Aust.p as Poly,
Count(*) as bstations
FROM [aust_hex_shape_57km] as Shape_Aust, POI
WHERE ST_Within(POI.geometry,Shape_Aust.geometry) 
and (POI.fclass= 'comms_tower')
GROUP BY Poly;

.mode csv
.headers on

DROP TABLE if exists "tabular_hex_57km_11_16_place";

CREATE TABLE "tabular_hex_57km_11_16_place" AS
SELECT CAST(Shape_Place11.Poly as INT) as Poly,
CAST(Shape_Place11.NeedA11 AS FLOAT) as NeedA11,
CAST(Shape_Place11.NeedAT11 AS FLOAT) as NeedAT11,
CAST(Shape_Place11.PUnPA11 AS FLOAT) as PUnPA11,
CAST(Shape_Place11.PUnPAT11 AS FLOAT) as PUnPAT11,
CAST(Shape_Place11.PUnPCC11 AS FLOAT) as PUnPCC11,
CAST(Shape_Place11.PUnPCCT11 AS FLOAT) as PUnPCCT11,
CAST(Shape_Place16.NeedA16 AS FLOAT) as NeedA16,
CAST(Shape_Place16.NeedAT16 AS FLOAT) as NeedAT16,
CAST(Shape_Place16.PUnPA16 AS FLOAT) as PUnPA16,
CAST(Shape_Place16.PUnPAT16 AS FLOAT) as PUnPAT16,
CAST(Shape_Place16.PUnPCC16 AS FLOAT) as PUnPCC16,
CAST(Shape_Place16.PUnPCCT16 AS FLOAT) as PUnPCCT16,
CAST(place.places AS FLOAT) as places,
CAST(service.services AS FLOAT) as services ,
CAST(bstation.bstations AS FLOAT) as bstations ,
CAST(road.roads AS FLOAT) as roads,
CAST(Shape_Aust.Island AS FLOAT) as Island,
CAST(Shape_Aust.Locality AS FLOAT) as Locality,
CAST(Shape_Aust.AGIL AS FLOAT) as AGIL,
CAST(Shape_Aust.MBSP AS FLOAT) as MBSP,
CAST(Shape_Aust.p_N AS FLOAT) as p_N,
CAST(Shape_Aust.p_NE AS FLOAT) as p_NE,
CAST(Shape_Aust.p_E AS FLOAT) as p_E,
CAST(Shape_Aust.p_SE AS FLOAT) as p_SE,
CAST(Shape_Aust.p_S AS FLOAT) as p_S,
CAST(Shape_Aust.p_SW AS FLOAT) as p_SW,
CAST(Shape_Aust.p_W AS FLOAT) as p_W,
CAST(Shape_Aust.p_NW AS FLOAT) as p_NW,
CAST(Shape_Aust.row AS FLOAT) as row,
CAST(Shape_Aust.col AS FLOAT) as col,
CAST(Shape_Aust.est_area AS FLOAT) as est_area
FROM [aust_hex_shape_57km] as Shape_Aust 
LEFT JOIN [donor_feat_place_57km_11_B18_B21_B22] as Shape_Place11
ON Shape_Aust.p=CAST(Shape_Place11.Poly as INT)
LEFT JOIN [donor_feat_place_57km_16_G18_G21_G22] as Shape_Place16
ON Shape_Aust.p=CAST(Shape_Place16.Poly as INT)
LEFT JOIN [shape_57km_bstation_count] as bstation
ON Shape_Aust.p = CAST(bstation.Poly as INT)
LEFT JOIN [shape_57km_road_count] as road
ON Shape_Aust.p = CAST(road.Poly as INT)
LEFT JOIN [shape_57km_service_count] as service
ON Shape_Aust.p = CAST(service.Poly as INT)
LEFT JOIN [shape_57km_place_count] as place
ON Shape_Aust.p = CAST(place.Poly as INT);

.output csv/tabular_hex_57km_11_16_place.csv
select * from tabular_hex_57km_11_16_place;

.quit

