

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "mb11tosa211";

CREATE TABLE mb11tosa211 AS
SELECT 
MB11.MB_CODE11,
sa211.SA2_MAIN11,
sa211.SA2_NAME11,
((ST_Area(ST_Intersection(MB11.geometry,sa211.geometry))*12391.3)/MB11.MB_Area)*MB11.Persons as Area_Count
FROM [mb_2011_aust_pop] as MB11 
INNER JOIN [SA2_2011_AUST] as sa211 
ON ST_Intersects(MB11.geometry,sa211.geometry);

.output ../csv/mb11tosa211.csv

select * from "mb11tosa211";

DROP TABLE IF EXISTS "mbpop11_sa211";

CREATE TABLE mbpop11_sa211 AS
SELECT 
MB_sa211.SA2_MAIN11 AS SA2_MAIN11,
MB_sa211.SA2_NAME11 as SA2_NAME11,
CAST(SUM(Area_Count) AS FLOAT) as Area_Total
FROM [mb11tosa211] as MB_sa211 
GROUP BY SA2_MAIN11,SA2_NAME11;

.output ../csv/mbpop11_sa211.csv

select * from "mbpop11_sa211";

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';


.mode csv
.headers on
pragma temp_store=0;
DROP TABLE IF EXISTS "sa211_ced18_mbpop11";

CREATE TABLE sa211_ced18_mbpop11 AS
SELECT
mb11tosa211.SA2_MAIN11 as SA2_MAIN11,
mb11tosa211.SA2_NAME11 as SA2_NAME11,
mb11toced18.CED_CODE18 AS CED_CODE18,
mb11toced18.CED_NAME18 AS CED_NAME18,
CAST(SUM(mb11tosa211.Area_Count) AS FLOAT) as Olap_Count
FROM mb11tosa211
INNER JOIN mb11toced18
ON mb11tosa211.MB_CODE11=mb11toced18.MB_CODE11
GROUP BY SA2_MAIN11,SA2_NAME11,CED_CODE18,CED_NAME18;

.output ../csv/sa211_ced18_mbpop11.csv

select * from "sa211_ced18_mbpop11";

.mode csv
.headers on
pragma temp_store=1;
DROP TABLE IF EXISTS "sa211_ced18_mbpop11_clean";

CREATE TABLE sa211_ced18_mbpop11_clean AS
SELECT
sa211_ced18_mbpop11.SA2_MAIN11 as SA2_MAIN11,
sa211_ced18_mbpop11.SA2_NAME11 as SA2_NAME11,
sa211_ced18_mbpop11.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop11.CED_NAME18 AS CED_NAME18,
sa211_ced18_mbpop11.Olap_Count
FROM sa211_ced18_mbpop11
WHERE CED_NAME18 NOT LIKE '%address%'
 AND 
CED_NAME18 NOT LIKE '%Migratory%' AND
SA2_NAME11 NOT LIKE '%address%' AND
SA2_NAME11 NOT LIKE '%Migratory%';

.output ../csv/sa211_ced18_mbpop11_clean.csv

select * from "sa211_ced18_mbpop11_clean";




.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "prop_sa211_ced18_mbpop11";

CREATE TABLE prop_sa211_ced18_mbpop11 AS
SELECT
sa211_ced18_mbpop11_clean.SA2_MAIN11 AS SA2_MAIN11,
sa211_ced18_mbpop11_clean.SA2_NAME11 AS SA2_NAME11,
sa211_ced18_mbpop11_clean.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop11_clean.CED_NAME18 AS CED_NAME18,
CAST((sa211_ced18_mbpop11_clean.Olap_Count/mbpop11_sa211.Area_Total) AS FLOAT) as Prop
FROM sa211_ced18_mbpop11_clean
INNER JOIN mbpop11_sa211
ON sa211_ced18_mbpop11_clean.SA2_MAIN11=mbpop11_sa211.SA2_MAIN11 ;

.output ../csv/prop_sa211_ced18_mbpop11.csv

select * from "prop_sa211_ced18_mbpop11";

###############################################################################################
# Total all proportions                                                                       #
# New Proportion is first proportion divided the first proportion total                       #
###############################################################################################

.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "propt_sa211_ced18_mbpop11";

CREATE TABLE propt_sa211_ced18_mbpop11 AS
SELECT
prop_sa211_ced18_mbpop11.SA2_MAIN11 AS SA2_MAIN11,
prop_sa211_ced18_mbpop11.SA2_NAME11 AS SA2_NAME11,
SUM(prop_sa211_ced18_mbpop11.Prop) as Tot_Prop
FROM prop_sa211_ced18_mbpop11
where SA2_NAME11 NOT LIKE '%address%' AND
SA2_NAME11 NOT LIKE '%Migratory%'
GROUP BY SA2_MAIN11,SA2_NAME11;

.output ../csv/propt_sa211_ced18_mbpop11.csv

select * from "propt_sa211_ced18_mbpop11";

#############################
# Next Bit
##########################


.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';

DROP TABLE IF EXISTS "conc_sa211_ced18_mbpop11";

CREATE TABLE conc_sa211_ced18_mbpop11 AS
SELECT
sa211_ced18_mbpop11_clean.SA2_MAIN11 AS SA2_MAIN11,
sa211_ced18_mbpop11_clean.SA2_NAME11 AS SA2_NAME11,
sa211_ced18_mbpop11_clean.CED_CODE18 AS CED_CODE18,
sa211_ced18_mbpop11_clean.CED_NAME18 AS CED_NAME18,
CAST((sa211_ced18_mbpop11_clean.Olap_Count/mbpop11_sa211.Area_Total)/propt_sa211_ced18_mbpop11.Tot_Prop as float) as Prop
FROM sa211_ced18_mbpop11_clean
INNER JOIN mbpop11_sa211
ON sa211_ced18_mbpop11_clean.SA2_MAIN11=mbpop11_sa211.SA2_MAIN11 and prop is not NULL
INNER JOIN propt_sa211_ced18_mbpop11
ON propt_sa211_ced18_mbpop11.SA2_MAIN11=mbpop11_sa211.SA2_MAIN11;


.output ../csv/conc_sa211_ced18_mbpop11.csv

select * from "conc_sa211_ced18_mbpop11";



.mode csv
.headers on
pragma temp_store=1;
pragma temp_store_directory = '../spatialite_db';


.quit